buildscript {
    repositories {
        jcenter()
    }
}

allprojects {
    def props = new Properties()
    props.load(new FileInputStream("${rootDir}/realm.properties"))
    props.each { key, val ->
        project.ext.set(key, val)
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven-publish'

def properties = new Properties()
properties.load(new FileInputStream("${rootDir}/dependencies.list"))

def syncVersion = properties.getProperty('REALM_SYNC_VERSION')

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    mavenLocal()
    jcenter()
}

configurations {
    provided
    compile.extendsFrom provided
}

// Include the generated Version file
sourceSets {
    main {
        compileClasspath += configurations.provided
        java {
            srcDir 'build/generated-src/main/java'
        }
    }
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile "io.realm:realm-annotations:${version}"
    provided 'com.android.tools.build:gradle:2.1.0'
    compile 'org.javassist:javassist:3.20.0-GA'

    testImplementation('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

// for Ant filter
import org.apache.tools.ant.filters.ReplaceTokens

task generateVersionClass(type: Copy) {
    from 'src/main/templates/Version.java'
    into 'build/generated-src/main/java/io/realm/transformer'
    filter(ReplaceTokens, tokens: [version: version, syncVersion: syncVersion])
    outputs.upToDateWhen { false }
}

compileJava.dependsOn generateVersionClass

wrapper {
    gradleVersion = project.gradleVersion
}

